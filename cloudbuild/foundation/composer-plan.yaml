steps:

# CLOUD COMPOSER WITH DAGS

# For the TF plan to run, the branch name must be either the long running branch name or prefixed by the long running branch.
# Ex. If creating a new feature for main/prod -ONLY-, then prefix the branch with `main-feature1`

- id: "store git branch"
  name: ubuntu
  entrypoint: bash
  args:
  - -c
  - |
      # save git branch to persistent volume: /workspace
      echo "Current branch name is $BRANCH_NAME"
      echo ""      
      if [[ "$BRANCH_NAME" == test* ]] || [[ "$BRANCH_NAME" == test ]]; then
        branch=test
        echo "Branch Name is now $branch"
        echo $branch > /workspace/branch.txt
      elif [[ "$BRANCH_NAME" == main* ]] || [[ "$BRANCH_NAME" == main ]]; then
        branch=main
        echo "Branch Name is now $branch"
        echo $branch > /workspace/branch.txt
      fi

- id: "composer init"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/foundation/data-ops/cloud-composer'
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
        terraform init -backend-config=bucket=${_BUCKET} -backend-config=prefix=${_PREFIX}/$(cat /workspace/branch.txt)/cloud-composer
  

- id: "terraform workspace"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/foundation/data-ops/cloud-composer'
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
        terraform workspace select $(cat /workspace/branch.txt) || terraform workspace new $(cat /workspace/branch.txt)

- id: Terraform Format
  name: 'hashicorp/terraform:${_TAG}'
  dir: 'environment/foundation/data-ops/cloud-composer'
  args: ['fmt',
    '-check'
    ]

- id: Terraform Validate
  name: 'hashicorp/terraform:${_TAG}'
  dir: 'environment/foundation/data-ops/cloud-composer'
  args: ['validate',
    '-no-color'
    ]

- id: "composer plan to create cloud composer"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/foundation/data-ops/cloud-composer'
  args: [
  'plan',
  '-var-file=env/${_TFVARS_FILE}.tfvars',
  '-var=enforce=false'
  ]