steps:

# ----- EGRESS PROJECT

- id: "store git branch"
  name: ubuntu
  entrypoint: bash
  args:
  - -c
  - |
      # save git branch to persistent volume: /workspace
      echo "Current branch name is $BRANCH_NAME"
      if [[ "$BRANCH_NAME" == test* ]] || [[ "$BRANCH_NAME" == test ]]; then
        branch=test
        echo "Branch Name is now $branch"
        echo $branch > /workspace/branch.txt
      elif [[ "$BRANCH_NAME" == main* ]] || [[ "$BRANCH_NAME" == main ]]; then
        branch=main
        echo "Branch Name is now $branch"
        echo $branch > /workspace/branch.txt
      fi



- id: "tf init"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/researcher-projects/'
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
        terraform init -backend-config=bucket=${_BUCKET} -backend-config=prefix=${_PREFIX}/$(cat /workspace/branch.txt)/researcher-projects/${_WORKSPACE}

- id: "terraform workspace"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/researcher-projects/egress'
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
        terraform workspace select $(cat /workspace/branch.txt) || terraform workspace new $(cat /workspace/branch.txt)

- id: "tf fmt"
  name: 'hashicorp/terraform:${_TAG}'
  dir: 'environment/deployments/researcher-projects/'
  args: ['fmt',
    '-check'
    ]

- id: "tf validate"
  name: 'hashicorp/terraform:${_TAG}'
  dir: 'environment/deployments/researcher-projects/'
  args: ['validate',
    '-no-color'
    ]

- id: "tf plan - org pol on"
  name: hashicorp/terraform:${_TAG}
  dir: 'environment/deployments/researcher-projects'
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
        terraform plan -var=set_disable_sa_create=false -var-file=env//${_WORKSPACE}.auto.tfvars -input=false

# #---- RESEARCHER PROJECTS WITH DAGS

# - id: "workspace store git branch"
#   name: ubuntu
#   entrypoint: bash
#   args:
#   - -c
#   - |
#       # save git branch to persistent volume: /workspace
#       echo "Current branch name is $BRANCH_NAME"     
#       if [[ "$BRANCH_NAME" == test* ]] || [[ "$BRANCH_NAME" == test ]]; then
#         branch=test
#         echo "Branch Name is now $branch"
#         echo $branch > /workspace/branch.txt
#       elif [[ "$BRANCH_NAME" == main* ]] || [[ "$BRANCH_NAME" == main ]]; then
#         branch=main
#         echo "Branch Name is now $branch"
#         echo $branch > /workspace/branch.txt
#       fi

# - id: "tf init - researcher workspace"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/deployments/researcher-projects/workspace'
#   entrypoint: /bin/sh
#   args:
#     - '-c'
#     - |
#         terraform init -backend-config=bucket=${_BUCKET} -backend-config=prefix=${_PREFIX}/$(cat /workspace/branch.txt)/researcher-projects/${_WORKSPACE}/workspace

# - id: "tf workspace - researcher workspace"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/deployments/researcher-projects/workspace'
#   entrypoint: /bin/sh
#   args:
#     - '-c'
#     - |
#         terraform workspace select $(cat /workspace/branch.txt) || terraform workspace new $(cat /workspace/branch.txt)

# - id: "tf fmt - researcher workspace"
#   name: 'hashicorp/terraform:${_TAG}'
#   dir: 'environment/deployments/researcher-projects/workspace'
#   args: ['fmt',
#     '-check'
#     ]

# - id: "tf validate - researcher workspace"
#   name: 'hashicorp/terraform:${_TAG}'
#   dir: 'environment/deployments/researcher-projects/workspace'
#   args: ['validate',
#     '-no-color'
#     ]


# - id: "tf plan - researcher workspace - org pol disable"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/deployments/researcher-projects/workspace'
#   args: [
#     'plan',
#     '-var-file=../env/${_WORKSPACE}/globals.tfvars',
#     '-var-file=../env/${_WORKSPACE}/workspace/terraform.tfvars',
#     '-var=researcher_workspace_name=${_WORKSPACE}',
#     '-var=set_disable_sa_create=false'
#     ]


# # # ------ VPC SC

# - id: "vpc sc store git branch"
#   name: ubuntu
#   entrypoint: bash
#   args:
#   - -c
#   - |
#       # save git branch to persistent volume: /workspace
#       echo "Current branch name is $BRANCH_NAME"     
#       if [[ "$BRANCH_NAME" == test* ]] || [[ "$BRANCH_NAME" == test ]]; then
#         branch=test
#         echo "Branch Name is now $branch"
#         echo $branch > /workspace/branch.txt
#       elif [[ "$BRANCH_NAME" == main* ]] || [[ "$BRANCH_NAME" == main ]]; then
#         branch=main
#         echo "Branch Name is now $branch"
#         echo $branch > /workspace/branch.txt
#       fi

# - id: "vpc-sc init"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/deployments/researcher-projects/vpc-sc'
#   entrypoint: /bin/sh
#   args:
#     - '-c'
#     - |
#         terraform init -backend-config=bucket=${_BUCKET} -backend-config=prefix=${_PREFIX}/$(cat /workspace/branch.txt)/researcher-projects/${_WORKSPACE}/vpc-sc

# - id: "terraform workspace"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/deployments/researcher-projects/vpc-sc'
#   entrypoint: /bin/sh
#   args:
#     - '-c'
#     - |
#         terraform workspace select $(cat /workspace/branch.txt) || terraform workspace new $(cat /workspace/branch.txt)


# - id: Terraform Format
#   name: 'hashicorp/terraform:${_TAG}'
#   dir: 'environment/deployments/researcher-projects/vpc-sc'
#   args: ['fmt',
#     '-check'
#     ]

# - id: Terraform Validate
#   name: 'hashicorp/terraform:${_TAG}'
#   dir: 'environment/deployments/researcher-projects/vpc-sc'
#   args: ['validate',
#     '-no-color'
#     ]

# # Use the workspace tfvars to read the data stewards value
# - id: "vpc-sc plan"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/deployments/researcher-projects/vpc-sc'
#   args: [
#   'plan',
#   '-var-file=../env/${_WORKSPACE}/globals.tfvars',
#   '-var-file=../env/${_WORKSPACE}/egress/terraform.tfvars',
#   '-var-file=../env/${_WORKSPACE}/workspace/terraform.tfvars',
#   '-var=researcher_workspace_name=${_WORKSPACE}'
#   ]

# # --- VPC SC Foundation
# # Add researcher workspace service accounts to the access context.

# - id: "vpc-sc foundation store git branch"
#   name: ubuntu
#   entrypoint: bash
#   args:
#   - -c
#   - |
#       # save git branch to persistent volume: /workspace
#       echo "Current branch name is $BRANCH_NAME"     
#       if [[ "$BRANCH_NAME" == test* ]] || [[ "$BRANCH_NAME" == test ]]; then
#         branch=test
#         echo "Branch Name is now $branch"
#         echo $branch > /workspace/branch.txt
#       elif [[ "$BRANCH_NAME" == main* ]] || [[ "$BRANCH_NAME" == main ]]; then
#         branch=main
#         echo "Branch Name is now $branch"
#         echo $branch > /workspace/branch.txt
#       fi

# - id: "vpc-sc foundation init"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/foundation/vpc-sc/'
#   entrypoint: /bin/sh
#   args:
#     - '-c'
#     - |
#         terraform init -backend-config=bucket=${_BUCKET} -backend-config=prefix=${_PREFIX_FOUNDATION}/$(cat /workspace/branch.txt)/vpc-sc

# - id: "vpc-sc foundation terraform workspace"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/foundation/vpc-sc/'
#   entrypoint: /bin/sh
#   args:
#     - '-c'
#     - |
#         terraform workspace select $(cat /workspace/branch.txt) || terraform workspace new $(cat /workspace/branch.txt)

# - id: "vpc-sc foundation plan"
#   name: hashicorp/terraform:${_TAG}
#   dir: 'environment/foundation/vpc-sc/'
#   args: [
#   'plan',
#   '-target=module.access_level_service-accounts',
#   '-target=module.access_level_stewards',
#   '-var-file=env/${_TFVARS_FILE}.tfvars',
#   ]